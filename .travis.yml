language: minimal

services:
    docker

env:
    matrix:
      - backend=mc communication_backend=single_node
      - backend=mc communication_backend=simple_mpi
      - backend=mc communication_backend=ghex_comm
      - backend=x86 communication_backend=single_node
      - backend=x86 communication_backend=simple_mpi
      - backend=x86 communication_backend=ghex_comm
      - backend=cuda communication_backend=single_node
      - backend=cuda communication_backend=simple_mpi
      - backend=cuda communication_backend=ghex_comm
    global:
      - secure: WBQZ7gXgA/Qe0LNVFJ3yDGQKxcZ+Ezxdf9TkgBMlywLQQVrXnHsCGIJc/gU5lf2//vKF3Mkq1gQgPZgpVm4VCVmlTAUH48o9qQasJ6gIofb+OqZN9yqui2ukqqev6oupjJWo0Shs5vkw2RKthxLnBcEQR8pPgVsHkgNhrZc1kXDMcYexY/dKQ3shEb1BAOTQZSoYvpbQAgau3M0F4yIAmUveAsFneOoklEThRMI64F31BmHrVpQeCSdqhPjU4kaNV603DzfRWZNyIFxT6ZpgEzwD7XoV8i6+UzmOb1nEsL2EilT5vwBJmYzWpU8OIelULDZJ1EwbKyZDmqbLWhoWSbPK99LmcI/o9vhG9wCPLUsLyXGQIHR2Gh0BUGYtHZD5IcscGSPwd6Psr9tOJLTf1VjB9Pi+HKwJ0AWq5HtyZtoxd+Q7ZmNOxpMcUH7zJwhF40K5zjwoRNiUSzkvvcm1wIXDCcxCvDz6xTuvOSgRYbd7urMxNv9DvU6jCPkWd+3uxvi4DTb6gwN0T2+JnwqiwSb/qQfOkZki3oB8pr8B+2jF62Jwf9fLrPkb+XzS9B3eoC0OXYDO/st9UFe74qckD+dDpAo8brczsa6QhmqvXv1OqqQclpQOjfnl8aIyicOO5cxUHolhpR9ltlKiEy77yJ78AwT23EuD7sqJPw1V8WY=
      - secure: sAi4xdNUrH+iVFds9fpNmMmMHdmACopPXuH0axPrHQwEo4XVKOF/QJEBx2XH/f+4cqX0wcLEzQZnFkl9j/dx7G7a9c+dlexYl5ZIp2a0+mVb7NuoqOLJxrJlOs62ofiz1gaea/+rcXCKFLjzl2ejHMpNwurD8mypWNMJjZvgdU+7Uh3KdWNypNogEGHj/ucV7ig5x6fvRC9vtG3qfDFMo559czyEEWwYLRO62qXZO0jWkVakr7UzbmuNF4gRQKa2QWUTGFAtmdC408XxA2oAudlAp4wvju7nTu4Xjzk61hh5JBqadiXNnOimwCWVncBfhX0iqbUVuFMrFK2xcA8dHElAscEIcoejhqzw4cDyMnQTfwNFu7VgE2BR+03LZmcTHn/SmhrUTxf/zgyxQusD8pzjavRRnK87nzpSqkcJOlRDTo7XOWV2bdUnBW8AQGSkSqP0M63AhVy6vIO+bhYTwARnUsQ/vWqDtqa+ugU2ngq1vLN+5oHO1p9OhYuaaSrOHj+nOaHm06Yiof0LnNVXA/3SpMEhm+wbC0Hhi49DXZX4Sv11P4+b/0QURNC1hprGDuQlESWYyAkj3n4LvSGtaDqxF199VMVLUIIWdXJEpJwdoZZ2fsSEgMq7UpGZjjGczQnYFdWb4rhhsb+7WTbY1P0r01lj9cZhjZ3UnIRnVOE=

script:
    - >
      docker build
      --build-arg BUILD_FROM=$(if [ $backend = cuda ]; then echo nvidia/cuda:10.1-devel-ubuntu18.04; else echo ubuntu:19.10; fi)
      --build-arg GTBENCH_BACKEND=${backend}
      --build-arg GTBENCH_COMMUNICATION_BACKEND=${communication_backend}
      -t gtbench:${backend}_${communication_backend}
      .
      &&
      if [ ! $backend = cuda ]; then
      docker run --rm -it gtbench:${backend}_${communication_backend} /usr/bin/benchmark 10 &&
      docker run --rm -it gtbench:${backend}_${communication_backend} /usr/bin/convergence_tests;
      fi
      &&
      if [ ${TRAVIS_PULL_REQUEST} = false ] && [ ${TRAVIS_BRANCH} = master ]; then
      echo ${DOCKER_TOKEN} | docker login -u ${DOCKER_USERNAME} --password-stdin &&
      docker tag gtbench:${backend}_${communication_backend} ${DOCKER_USERNAME}/gtbench:${backend}_${communication_backend} &&
      docker push "${DOCKER_USERNAME}/gtbench" &&
      docker logout;
      fi
