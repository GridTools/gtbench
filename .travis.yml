language: minimal

services:
    docker

env:
    matrix:
      - backend=mc runtime=single_node
      - backend=mc runtime=simple_mpi
      - backend=mc runtime=gcl
      - backend=mc runtime=ghex_comm
      - backend=x86 runtime=single_node
      - backend=x86 runtime=simple_mpi
      - backend=x86 runtime=gcl
      - backend=x86 runtime=ghex_comm
      - backend=cuda runtime=single_node
      - backend=cuda runtime=simple_mpi
      - backend=cuda runtime=gcl
      - backend=cuda runtime=ghex_comm
    global:
      - secure: x1lSbemorpCDKvFzF5q2T2vXFElMaCkdOImlDu6rNt9MCe/URx1qPunxU+vpcLWWX0zZBFQXuwFAUAr3oDSp3udDxMxoksndJx3hwD6NpyictaeZwDCVTDK3sXybo+p4yWnFa80Qolkd0CsY5fLxH70z3kowwB4e/hYqkGz5VeEW3ieAy2dpd22+uTCXVyhw2xwCZq+YbHuY+9xpBXQL1iJku/5BrXrjEc26VW7VIEsaZFQwJAMor4dDcmGZ5aRanQ3WzzJZ3BVACovBmuYtoysFFiC62Dw8/YZEziA+rlbZgoEznV7IhwJ2ShyjybJfvP0Knvi3RwEsM7vLUPhUe/kt07urWn8Nhx/jHsdK9tadnNmDIgAX+O668zZ+XhekNSgyYZYqgeHdK8VURuEQZfdl4vk9yJOfKDFQufzPTXCIxT5zjeOAs/yINCXwo/uZcWq27OKTmslmAPUbcN4+W2Ta5Uj+1pZkXemmVFkeDuh93+IeBUKJNyLSgDf8glD81i5kJhJNnhuxLq+P4/WnKPHshT0NspIx7z2wPrAttRPMah75U0Zbe9vdN58b9DolEgxQyU+I5gPLIL57iEcD9PKQzZYHdmb32IweCiMycag0eY09v0D4Kx/oCgCMo/Ij2EnrH2lcyNP8ABwN8RECguzWDrzRvyU2xXk0js0qS2Q=

script:
    - >
      docker pull fthaler/gtbench:${backend}_${runtime}_base;
      docker build
      --cache-from fthaler/gtbench:${backend}_${runtime}_base
      --target base
      --build-arg BUILD_FROM=$(if [ $backend = cuda ]; then echo nvidia/cuda:10.1-devel-ubuntu18.04; else echo ubuntu:19.10; fi)
      --build-arg GTBENCH_BACKEND=${backend}
      --build-arg GTBENCH_runtime=${runtime}
      -t fthaler/gtbench:${backend}_${runtime}_base
      .
      &&
      docker build
      --cache-from fthaler/gtbench:${backend}_${runtime}_base
      --build-arg BUILD_FROM=$(if [ $backend = cuda ]; then echo nvidia/cuda:10.1-devel-ubuntu18.04; else echo ubuntu:19.10; fi)
      --build-arg GTBENCH_BACKEND=${backend}
      --build-arg GTBENCH_runtime=${runtime}
      -t fthaler/gtbench:${backend}_${runtime}
      .
      &&
      if [ ! $backend = cuda ]; then
      docker run --rm -it fthaler/gtbench:${backend}_${runtime} /usr/bin/benchmark --domain-size 10 10 &&
      docker run --rm -it fthaler/gtbench:${backend}_${runtime} /usr/bin/convergence_tests;
      fi
      &&
      if [ ${TRAVIS_PULL_REQUEST} = false ] && [ ${TRAVIS_BRANCH} = master ]; then
      echo ${DOCKER_TOKEN} | docker login -u fthaler --password-stdin &&
      docker push fthaler/gtbench &&
      docker logout;
      fi
